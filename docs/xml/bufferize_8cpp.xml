<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bufferize_8cpp" kind="file" language="C++">
    <compoundname>bufferize.cpp</compoundname>
    <includes refid="protos_8h" local="yes">protos.h</includes>
    <incdepgraph>
      <node id="6">
        <label>assert.h</label>
      </node>
      <node id="1">
        <label>bufferize.cpp</label>
        <link refid="bufferize_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>sys\stat.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ctype.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="bufferize_8cpp_1aadbba6ad94d0f635fa6d84d3cd2476df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bufferize</definition>
        <argsstring>(const char *filename, text *writeTo)</argsstring>
        <name>bufferize</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structtext" kindref="compound">text</ref> *</type>
          <declname>writeTo</declname>
        </param>
        <briefdescription>
<para>Buffirezes file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to bufferize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeTo</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to struct text to write buffer and buffer length to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bufferize.cpp" line="6" column="6" bodyfile="bufferize.cpp" bodystart="6" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protos_8h" kindref="compound">protos.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="bufferize_8cpp_1aadbba6ad94d0f635fa6d84d3cd2476df" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bufferize_8cpp_1aadbba6ad94d0f635fa6d84d3cd2476df" kindref="member">bufferize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/><ref refid="structtext" kindref="compound">text</ref>*<sp/>writeTo)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>writeTo-&gt;<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref><sp/>=<sp/><ref refid="get__size_8cpp_1ac87fbefe4ae9195d7ba3a7a38eed3fdb" kindref="member">get_size</ref><sp/>(filename);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>writeTo-&gt;<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>calloc<sp/>(writeTo-&gt;<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref><sp/>+<sp/>2,<sp/>sizeof<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a822bae94dea1a65ba1f762abd0a50009" kindref="member">CHECK</ref><sp/>(writeTo-&gt;<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref><sp/>==<sp/>NULL,<sp/>,<sp/><ref refid="protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056a660150ee9830d9dde6c013a814618984" kindref="member">BAD_ALLOC</ref>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>writeTo-&gt;<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref>++;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fIn<sp/>=<sp/>fopen<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a822bae94dea1a65ba1f762abd0a50009" kindref="member">CHECK</ref><sp/>(fIn<sp/>==<sp/>NULL,<sp/>,<sp/><ref refid="protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056ab7cad684cbb7c5b778a093a01fd8eaaa" kindref="member">FOPEN_ERROR</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a822bae94dea1a65ba1f762abd0a50009" kindref="member">CHECK</ref><sp/>(fread<sp/>(writeTo-&gt;<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref>,<sp/>sizeof<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>writeTo-&gt;<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref>,<sp/>fIn)<sp/>!=<sp/>writeTo-&gt;<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref>,<sp/>,<sp/><ref refid="protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056aec1024879d398de584d1722ebbe0a5c9" kindref="member">INPUT_ERROR</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>writeTo-&gt;<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref>[writeTo-&gt;<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="bufferize.cpp"/>
  </compounddef>
</doxygen>
