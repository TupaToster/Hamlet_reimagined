<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="read__text_8cpp" kind="file" language="C++">
    <compoundname>read_text.cpp</compoundname>
    <includes refid="protos_8h" local="yes">protos.h</includes>
    <incdepgraph>
      <node id="6">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>sys\stat.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>read_text.cpp</label>
        <link refid="read__text_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="read__text_8cpp_1ab285374b18fe616378d88faa5eccf546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtext" kindref="compound">text</ref></type>
        <definition>text read_text</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>read_text</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Fills text type var with input from file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>text struct full of stuff</para>
</simplesect>
Fills text struct with: textString - whole text of a file lines - array of lines of file of type [begin, end) stringCnt - amount of strings in file textSize - sizeof text (by get_size) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="read_text.cpp" line="14" column="6" bodyfile="read_text.cpp" bodystart="14" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protos_8h" kindref="compound">protos.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="protos_8h_1ab285374b18fe616378d88faa5eccf546" refkind="member"><highlight class="normal"><ref refid="structtext" kindref="compound">text</ref><sp/><ref refid="read__text_8cpp_1ab285374b18fe616378d88faa5eccf546" kindref="member">read_text</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtext" kindref="compound">text</ref><sp/>retVal<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="initializers__and__destructors_8cpp_1a3cc9f6add828df4782ed77208dd37977" kindref="member">initText</ref><sp/>(&amp;retVal);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref><sp/>=<sp/><ref refid="bufferize_8cpp_1a4533ca72f4105b135bffc875e44df8b1" kindref="member">bufferize</ref><sp/>(filename);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref><sp/>=<sp/>strlen<sp/>(retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>retVal.<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref>[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>retVal.<ref refid="structtext_1ac9b610f2d15da2a601e4dc20d252270a" kindref="member">stringCnt</ref>++;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.<ref refid="structtext_1ac9b610f2d15da2a601e4dc20d252270a" kindref="member">stringCnt</ref>++;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.<ref refid="structtext_1a826ba5613feb94342be61f8cce1c6771" kindref="member">lines</ref><sp/>=<sp/>(<ref refid="structline" kindref="compound">line</ref>*)<sp/>calloc<sp/>(retVal.<ref refid="structtext_1ac9b610f2d15da2a601e4dc20d252270a" kindref="member">stringCnt</ref><sp/>+<sp/>1,<sp/>sizeof<sp/>(<ref refid="structline" kindref="compound">line</ref>));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line_iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>retVal.<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal.<ref refid="structtext_1a826ba5613feb94342be61f8cce1c6771" kindref="member">lines</ref>[line_iter].<ref refid="structline_1a8aa4258c0f442b3c207ffe270aca4da6" kindref="member">begin</ref><sp/>==<sp/>NULL)<sp/>retVal.<ref refid="structtext_1a826ba5613feb94342be61f8cce1c6771" kindref="member">lines</ref>[line_iter].<ref refid="structline_1a8aa4258c0f442b3c207ffe270aca4da6" kindref="member">begin</ref><sp/>=<sp/>retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref>[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal.<ref refid="structtext_1a826ba5613feb94342be61f8cce1c6771" kindref="member">lines</ref>[line_iter].<ref refid="structline_1a5fa2b658adce1c935eee1f54b3d36e68" kindref="member">end</ref><sp/>=<sp/>retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref><sp/>+<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_iter++;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.<ref refid="structtext_1a826ba5613feb94342be61f8cce1c6771" kindref="member">lines</ref>[line_iter].<ref refid="structline_1a5fa2b658adce1c935eee1f54b3d36e68" kindref="member">end</ref><sp/>=<sp/>retVal.<ref refid="structtext_1acedd0976707f133eb8e729d778da7d37" kindref="member">textString</ref><sp/>+<sp/>retVal.<ref refid="structtext_1a859639b4d548fb8e77b46962b44d6528" kindref="member">textSize</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="read_text.cpp"/>
  </compounddef>
</doxygen>
