<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_protos_8h" xml:lang="en-US">
<title>protos.h File Reference</title>
<indexterm><primary>protos.h</primary></indexterm>
<programlisting>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;assert.h&gt;
#include &lt;sys\stat.h&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structline">line</link></para>

<para>Struct to store lines of text in format [begin, end) </para>
</listitem>
            <listitem><para>struct <link linkend="_structtext">text</link></para>

<para>Stores text in format of string and array of line structures. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_protos_8h_1a18b5ed1de200502d90a1d48be7842ca1">check</link>(cond,  retVal,  errType)</para>

<para>Checks for condition and if true returns retVal and writes errType to errCode. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056">errorCode</link> { <link linkend="_protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056a2bc49ec37d6a5715dd23e85f1ff5bb59">OK</link> = 0
 }</para>

<para>Enum for error codes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structtext">text</link> <link linkend="_protos_8h_1ab563e906068c4ab8853e8b07c074710f">initText</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structline">line</link> <link linkend="_protos_8h_1a278f7d7631584b1f971fd69034e037d2">initLine</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_protos_8h_1a5cd4fdc44f5aab88c2b2f6072dd05ae9">killText</link> (<link linkend="_structtext">text</link> *target)</para>

<para>Deinitializes a text type var. </para>
</listitem>
            <listitem><para>void <link linkend="_protos_8h_1a89e5f11c20a0fe41e1fcee4c8fe3bcfd">killLine</link> (<link linkend="_structline">line</link> *target)</para>

<para>Deinitializes a line type var. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_protos_8h_1a18b5ed1de200502d90a1d48be7842ca1"/>    <section>
    <title>check</title>
<indexterm><primary>check</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>check</secondary></indexterm>
<para><computeroutput>#define check( cond,  retVal,  errType)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting><emphasis role="keywordflow">if</emphasis>&#32;(cond)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;errCode&#32;=&#32;errType;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;return&#32;retVal;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting><para>

<para>Checks for condition and if true returns retVal and writes errType to errCode. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>cond</entry>
                                <entry>
<para>condition to check </para>
</entry>
                            </row>
                            <row>
                                <entry>retVal</entry>
                                <entry>
<para>value to return </para>
</entry>
                            </row>
                            <row>
                                <entry>errType</entry>
                                <entry>
<para>error type to save </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 18 of file protos.h.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056"/>    <section>
    <title>errorCode</title>
<indexterm><primary>errorCode</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>errorCode</secondary></indexterm>
<para><computeroutput>enum <link linkend="_protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056">errorCode</link></computeroutput></para><para>

<para>Enum for error codes. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>OK</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>OK</secondary></indexterm>
<anchor xml:id="_protos_8h_1ab19a8e0fe3ea0ea5c7259400cb389056a2bc49ec37d6a5715dd23e85f1ff5bb59"/>OK</entry><entry>
<para>everything ok </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 7 of file protos.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_protos_8h_1a278f7d7631584b1f971fd69034e037d2"/>    <section>
    <title>initLine()</title>
<indexterm><primary>initLine</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>initLine</secondary></indexterm>
<para><computeroutput><link linkend="_structline">line</link> initLine ( )</computeroutput></para>    </section><anchor xml:id="_protos_8h_1ab563e906068c4ab8853e8b07c074710f"/>    <section>
    <title>initText()</title>
<indexterm><primary>initText</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>initText</secondary></indexterm>
<para><computeroutput><link linkend="_structtext">text</link> initText ( )</computeroutput></para>    </section><anchor xml:id="_protos_8h_1a89e5f11c20a0fe41e1fcee4c8fe3bcfd"/>    <section>
    <title>killLine()</title>
<indexterm><primary>killLine</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>killLine</secondary></indexterm>
<para><computeroutput>void killLine (<link linkend="_structline">line</link> * target)</computeroutput></para><para>

<para>Deinitializes a line type var. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>target</entry>
                                <entry>
<para>line* to var to kill </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 18 of file initializers_and_destructors.cpp.</para>
    </section><anchor xml:id="_protos_8h_1a5cd4fdc44f5aab88c2b2f6072dd05ae9"/>    <section>
    <title>killText()</title>
<indexterm><primary>killText</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>killText</secondary></indexterm>
<para><computeroutput>void killText (<link linkend="_structtext">text</link> * target)</computeroutput></para><para>

<para>Deinitializes a text type var. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>target</entry>
                                <entry>
<para>text* to var to kill </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 41 of file initializers_and_destructors.cpp.</para>
</section>
</section>
</section>
